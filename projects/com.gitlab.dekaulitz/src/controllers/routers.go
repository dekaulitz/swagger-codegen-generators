/*
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * API version: 1.0.3
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package controllers

import (
    "com.gitlab.dekaulitz/src/controllers"
    "github.com/gin-gonic/gin"
    "net/http"
)
func GetRouters(r *gin.Engine) {
    //Add a new pet to the store
    r.POST("/pet",AddPet)
    //Deletes a pet
    r.DELETE("/pet/{petId}",DeletePet)
    //Finds Pets by status
    r.GET("/pet/findByStatus",FindPetsByStatus)
    //Finds Pets by tags
    r.GET("/pet/findByTags",FindPetsByTags)
    //Find pet by ID
    r.GET("/pet/{petId}",GetPetById)
    //Update an existing pet
    r.PUT("/pet",UpdatePet)
    //Updates a pet in the store with form data
    r.POST("/pet/{petId}",UpdatePetWithForm)
    //uploads an image
    r.POST("/pet/{petId}/uploadImage",UploadFile)
    //Delete purchase order by ID
    r.DELETE("/store/order/{orderId}",DeleteOrder)
    //Returns pet inventories by status
    r.GET("/store/inventory",GetInventory)
    //Find purchase order by ID
    r.GET("/store/order/{orderId}",GetOrderById)
    //Place an order for a pet
    r.POST("/store/order",PlaceOrder)
    //Create user
    r.POST("/user",CreateUser)
    //Creates list of users with given input array
    r.POST("/user/createWithArray",CreateUsersWithArrayInput)
    //Creates list of users with given input array
    r.POST("/user/createWithList",CreateUsersWithListInput)
    //Delete user
    r.DELETE("/user/{username}",DeleteUser)
    //Get user by user name
    r.GET("/user/{username}",GetUserByName)
    //Logs user into the system
    r.GET("/user/login",LoginUser)
    //Logs out current logged in user session
    r.GET("/user/logout",LogoutUser)
    //Updated user
    r.PUT("/user/{username}",UpdateUser)
}
