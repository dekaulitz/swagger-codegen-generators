package middleware

/**
* TokitaDevEngine version v1.0
* Generated by engine io.swagger.codegen.v3.generators.modules.plugins.golang.GolangGin
* Generated on 09/03/2020 23:26:35
* Developed by sulaimanfahmi@gmail.com
 */
import (
	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"github.com/google/uuid"
	"log"
)

func CorsHandler(router *gin.Engine) gin.HandlerFunc {
	config := cors.DefaultConfig()
	config.AllowOrigins = []string{"http://localhost:8080"}
	config.AddAllowHeaders("Signature")
	config.AllowHeaders = []string{"*"}
	return cors.New(config)
}

func RequestFilter() gin.HandlerFunc {
	return func(context *gin.Context) {
		if context.Request.Header.Get("X-Request-Id") == "" {
			requestId := uuid.New().String()
			context.Request.Header.Set("X-Request-Id", requestId)
			context.Writer.Header().Set("X-Request-Id", requestId)
		}
		context.Next()
	}
}
func LogRequestFilter()gin.HandlerFunc  {
	return func(context *gin.Context) {
		log.Println(context.Request)
		context.Next()
		log.Println(context.Writer.Status(),context.Writer.Header())
	}
}

func FilteringClientRequest()  {

}
